{"version":3,"sources":["modules/users.js","App.js","components/Menu.js","reportWebVitals.js","modules/index.js","index.js"],"names":["getUserSaga","usersSaga","GET_USERS_PENDING","GET_USERS_SUCCESS","GET_USERS_FAILURE","GET_USER","GET_USER_SUCCESS","GET_USER_FAILURE","getUsersFailure","payload","type","error","getUser","id","getUsers","dispatch","a","axios","get","response","getUserById","action","call","put","data","takeEvery","initialState","users","loading","user","state","RedPage","loadable","BluePage","UsersPage","App","path","component","Menu","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","window","__PRELOADED_STATE__","applyMiddleware","thunk","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af14eb20.chunk.js","sourcesContent":["import axios from 'axios';\nimport { call, put, takeEvery } from 'redux-saga/effects';\n\nconst GET_USERS_PENDING = 'users/GET_USERS_PENDING';\nconst GET_USERS_SUCCESS = 'users/GET_USERS_SUCCESS';\nconst GET_USERS_FAILURE = 'users/GET_USERS_FAILURE';\n\nconst GET_USER = 'users/GET_USER';\nconst GET_USER_SUCCESS = 'users/GET_USER_SUCCESS';\nconst GET_USER_FAILURE = 'users/GET_USER_FAILURE';\n\nconst getUsersPending = () => ({ type: GET_USERS_PENDING });\nconst getUsersSuccess = payload => ({ type: GET_USERS_SUCCESS, payload });\nconst getUsersFailure = payload => ({\n  type: GET_USERS_FAILURE,\n  error: true,\n  payload,\n});\n\nexport const getUser = id => ({ type: GET_USER, payload: id });\nconst getUserSuccess = data => ({ type: GET_USER_SUCCESS, payload: data });\nconst getUserFailure = error => ({\n  type: GET_USER_FAILURE,\n  payload: error,\n  error: true,\n});\n\nexport const getUsers = () => async dispatch => {\n  try {\n    dispatch(getUsersPending());\n    const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n    dispatch(getUsersSuccess(response));\n  } catch (e) {\n    dispatch(getUsersFailure(e));\n    throw e;\n  }\n};\n\nconst getUserById = id => axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\nfunction* getUserSaga(action) {\n  try {\n    const response = yield call(getUserById, action.payload);\n    yield put(getUserSuccess(response.data));\n  } catch (e) {\n    yield put(getUserFailure(e));\n  }\n}\n\nexport function* usersSaga() {\n  yield takeEvery(GET_USER, getUserSaga);\n}\n\nconst initialState = {\n  users: null,\n  loading: {\n    users: false,\n    user: false,\n  },\n  error: {\n    users: null,\n    user: null,\n  },\n};\n\nfunction users(state = initialState, action) {\n  switch (action.type) {\n    case GET_USERS_PENDING:\n      return {\n        ...state,\n        loading: { ...state.loading, users: true },\n        error: { ...state.error, users: null },\n      };\n    case GET_USERS_SUCCESS:\n      return {\n        ...state,\n        loading: { ...state.loading, users: false },\n        users: action.payload.data,\n      };\n    case GET_USERS_FAILURE:\n      return {\n        ...state,\n        loading: { ...state.loading, users: false },\n        error: { ...state.error, users: action.payload },\n      };\n    case GET_USER:\n      return {\n        ...state,\n        loading: { ...state.loading, user: true },\n        error: { ...state.error, user: null },\n      };\n    case GET_USER_SUCCESS:\n      return {\n        ...state,\n        loading: { ...state.loading, user: false },\n        user: action.payload,\n      };\n    case GET_USER_FAILURE:\n      return {\n        ...state,\n        loading: { ...state.loading, user: false },\n        error: { ...state.error, user: action.payload },\n      };\n    default:\n      return state;\n  }\n}\n\nexport default users;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Menu from './components/Menu';\nimport loadable from '@loadable/component';\nconst RedPage = loadable(() => import('./pages/RedPage'));\nconst BluePage = loadable(() => import('./pages/BluePage'));\nconst UsersPage = loadable(() => import('./pages/UsersPage'));\n\nconst App = () => {\n  return (\n    <div>\n      <Menu />\n      <hr />\n      <Route path=\"/red\" component={RedPage} />\n      <Route path=\"/blue\" component={BluePage} />\n      <Route path=\"/users\" component={UsersPage} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nconst Menu = () => {\n  return (\n    <ul>\n      <li>\n        <Link to=\"/red\">Red</Link>\n      </li>\n      <li>\n        <Link to=\"/blue\">Blue</Link>\n      </li>\n      <li>\n        <Link to=\"/users\">Users</Link>\n      </li>\n    </ul>\n  );\n};\n\nexport default Menu;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport users, { usersSaga } from './users';\nimport { all } from 'redux-saga/effects';\n\nexport function* rootSaga() {\n  yield all([usersSaga()]);\n}\n\nconst rootReducer = combineReducers({ users });\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { rootSaga } from './modules';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  window.__PRELOADED_STATE__, // 이 값을 초기상태로 사용함\n  applyMiddleware(thunk, sagaMiddleware)\n);\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}